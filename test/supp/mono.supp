##
## mono-specific suppressions (Boehm-GC) for use with valgrind
##

{
   mono - Conditional jump or move depends on uninitialised value
   Memcheck:Cond
   fun:GC_*
   fun:*
}
{
   mono - Use of uninitialized value of size 4
   Memcheck:Value4
   fun:GC_*
   fun:*
}
{
   mono - Use of uninitialized value of size 8
   Memcheck:Value8
   fun:GC_*
   fun:*
}
{
   mono - Use of uninitialized value of size 1
   Memcheck:Value1
   fun:GC_*
   fun:*
}
{
   mono - Invalid read of size 4
   Memcheck:Addr4
   fun:GC_*
   fun:*
}
{
   mono - Invalid read of size 8
   Memcheck:Addr8
   fun:GC_*
   fun:*
}


{
   mono - Invalid write of size 4
   Memcheck:Addr4
   fun:get_hazardous_pointer
   fun:*
}
{
   mono - Invalid write of size 8
   Memcheck:Addr8
   fun:get_hazardous_pointer
   fun:*
}

{
   mono - Invalid read of size 4
   Memcheck:Addr4
   fun:is_pointer_hazardous
   fun:*
}
{
   mono - Invalid read of size 8
   Memcheck:Addr8
   fun:is_pointer_hazardous
   fun:*
}

{
   mono - Invalid read of size 4
   Memcheck:Addr4
   fun:mono_thread_hazardous_free_or_queue
   fun:*
}
{
   mono - Invalid read of size 8
   Memcheck:Addr8
   fun:mono_thread_hazardous_free_or_queue
   fun:*
}

{
   mono - Invalid write of size 4
   Memcheck:Addr4
   fun:small_id_alloc
   fun:*
}
{
   mono - Invalid write of size 8
   Memcheck:Addr8
   fun:small_id_alloc
   fun:*
}

{
   mono - Invalid write of size 4
   Memcheck:Addr4
   fun:mono_jit_info_table_find
   fun:*
}
{
   mono - Invalid write of size 8
   Memcheck:Addr8
   fun:mono_jit_info_table_find
   fun:*
}

{
   mono - Invalid write of size 4
   Memcheck:Addr4
   fun:mono_get_cached_unwind_info
   fun:*
}
{
   mono - Invalid write of size 8
   Memcheck:Addr8
   fun:mono_get_cached_unwind_info
   fun:*
}