# manual override file for [SecurityCritical] and  [SecuritySafeCritical] attributes

# this type creates delegates to non-visible properties, events ...
+SC-T: Mono.Xaml.ManagedXamlLoader
+SC-T: Mono.Xaml.XamlLoaderFactory

# client stack is safe to use but calls (mostly via reflection) a bunch of critical code
+SC-T: System.Net.Browser.ClientReflectionHelper
+SSC-M: System.Void System.Net.Browser.ClientHttpWebRequestInternal::.cctor()
+SSC-M: System.Void System.Net.Browser.ClientHttpWebRequestInternal::.ctor(System.Net.Browser.ClientHttpWebRequest,System.Uri)
+SSC-M: System.IAsyncResult System.Net.Browser.ClientHttpWebRequestInternal::BeginGetRequestStream(System.AsyncCallback,System.Object)
+SSC-M: System.IAsyncResult System.Net.Browser.ClientHttpWebRequestInternal::BeginGetResponse(System.AsyncCallback,System.Object)
+SSC-M: System.IO.Stream System.Net.Browser.ClientHttpWebRequestInternal::EndGetRequestStream(System.IAsyncResult)
+SSC-M: System.Void System.Net.Browser.ClientHttpWebRequestInternal::Abort()
+SSC-M: System.Void System.Net.Browser.ClientHttpWebRequestInternal::EndCallback(System.IAsyncResult)
+SSC-M: System.Void System.Net.Browser.ClientHttpWebResponse::.cctor()
# 
+SC-M: System.Void System.Net.Browser.BrowserHttpWebRequestInternal::AvailableSafe(System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.IntPtr)
+SC-M: System.Void System.Net.Browser.BrowserHttpWebRequestInternal::StartedSafe(System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.IntPtr)
+SC-M: System.Void System.Net.Browser.BrowserHttpWebRequestInternal::OnAsyncDataAvailable(System.IntPtr,System.IntPtr,System.IntPtr)
+SC-M: System.Void System.Net.Browser.BrowserHttpWebRequestInternal::OnAsyncResponseStarted(System.IntPtr,System.IntPtr,System.IntPtr)

# make all (including the non-native, helper, methods of) NativeMethods [SecurityCritical]
+SC-T: Mono.NativeMethods

# make most of Mono.* (or internal) types [SecurityCritical]
+SC-T: Mono.ApplicationLauncher
+SC-T: Mono.Value
+SC-T: Mono.Xaml.XamlLoader
+SC-T: Mono.Xaml.SL4XamlLoader
+SC-T: Mono.MoonError
+SC-T: Mono.Hosting
+SC-T: Mono.StreamWrapper
+SC-T: Mono.Xaml.XamlElement
+SC-T: Mono.Xaml.XamlParser
+SC-T: Mono.Xaml.XamlObjectElement
+SC-T: Mono.Xaml.XamlPropertyElement
+SC-T: Mono.Xaml.XamlPropertySetter
+SC-T: Mono.Xaml.XamlNamePropertySetter
+SC-T: Mono.Xaml.XamlReflectionPropertySetter
+SC-T: Mono.Xaml.XamlReflectionEventSetter
+SC-T: Mono.Xaml.XamlAttachedPropertySetter
+SC-T: Mono.Xaml.MarkupExpressionParser
+SC-T: Mono.Xaml.SL3MarkupExpressionParser
+SC-T: Mono.Xaml.SL4MarkupExpressionParser
+SC-T: Mono.ManagedStreamCallbacks
+SC-T: Mono.ToggleRef
+SC-T: Mono.UriHelper
# don't SC-T Mono.DispatcherTimer, Mono.Events, Mono.ManagedType, Mono.NativeDependencyObjectHelper,
# Mono.Types, Mono.UnmanagedEventHandler - it's not worth it

# too many new helpers don't require to be critical so we'll be more precise with them
+SC-M: System.ComponentModel.TypeConverter Mono.Helper::GetConverterFor(System.Reflection.ICustomAttributeProvider,System.Type)
+SC-M: System.IntPtr Mono.Helper::StreamToIntPtr(System.IO.Stream)
+SC-M: System.Boolean Mono.Helper::CheckFileIntegrity(System.String)

+SC-M: System.Void Mono.MoonlightTypeConverter::.ctor(System.String,System.Type)
+SC-M: System.Void Mono.Xaml.XamlTypeConverter::.ctor(Mono.Xaml.XamlParser,Mono.Xaml.XamlObjectElement,System.String,System.Type)
+SC-M: System.Object Mono.MoonlightTypeConverter::ConvertObject(System.Reflection.PropertyInfo,System.Object,System.Type)
+SC-M: System.Object Mono.MoonlightTypeConverter::ConvertObject(System.Windows.DependencyProperty,System.Object,System.Type,System.Boolean)

+SC-M: System.Type Mono.Xaml.XamlTypeConverter::GetTargetType(Mono.Xaml.XamlTypeConverter)
+SC-M: System.Object Mono.Xaml.XamlTypeConverter::ConvertObject(Mono.Xaml.XamlParser,Mono.Xaml.XamlObjectElement,System.Type,System.ComponentModel.TypeConverter,System.String,System.Object)

+SC-M: System.Void Mono.WeakPropertyChangedListener::.ctor(System.Windows.DependencyObject,System.Windows.DependencyProperty,Mono.IListenPropertyChanged)
+SC-M: System.Void Mono.WeakPropertyChangedListener::OnPropertyChanged(System.IntPtr,System.IntPtr,Mono.MoonError&,System.IntPtr)

+SC-M: System.Int32 Mono.Events::AddHandler(System.IntPtr,System.Int32,Mono.UnmanagedEventHandlerInvoker)
+SC-M: System.Int32 Mono.Events::AddHandler(System.IntPtr,System.Int32,Mono.UnmanagedEventHandlerInvoker,System.Boolean)
+SC-M: System.Int32 Mono.Events::AddHandler(System.IntPtr,System.Int32,Mono.UnmanagedEventHandlerInvoker,Mono.DestroyUnmanagedEvent,System.Boolean)
+SC-M: System.Void Mono.Events::RemoveHandler(System.IntPtr,System.Int32,System.Int32)
+SC-M: System.Int32 Mono.Events::AddHandler(Mono.INativeEventObjectWrapper,System.Int32,Mono.UnmanagedEventHandlerInvoker)
+SC-M: System.Int32 Mono.Events::AddHandler(Mono.INativeEventObjectWrapper,System.Int32,Mono.UnmanagedEventHandlerInvoker,System.Boolean)
+SC-M: System.Int32 Mono.Events::AddHandler(Mono.INativeEventObjectWrapper,System.Int32,Mono.UnmanagedEventHandlerInvoker,Mono.DestroyUnmanagedEvent,System.Boolean)
+SC-M: System.Void Mono.Events::RemoveHandler(Mono.INativeEventObjectWrapper,System.Int32,System.Int32)
+SC-M: System.Void Mono.Events::AddOnEventHandler(System.Windows.DependencyObject,System.Int32,Mono.UnmanagedEventHandler)
+SC-M: System.Void Mono.Events::AddOnEventHandler(System.Windows.DependencyObject,System.Int32,Mono.UnmanagedEventHandler,System.Boolean)

+SC-M: System.Void Mono.NativeDependencyObjectHelper::FreeNativeMapping(Mono.INativeEventObjectWrapper)
+SC-M: System.Void Mono.NativeDependencyObjectHelper::FreeNativeMapping(System.IntPtr)
+SC-M: System.Boolean Mono.NativeDependencyObjectHelper::AddNativeMapping(System.IntPtr,Mono.INativeEventObjectWrapper)
+SC-M: System.Object Mono.NativeDependencyObjectHelper::CreateObject(Mono.Kind,System.IntPtr)
+SC-M: System.Void Mono.NativeDependencyObjectHelper::SetManagedPeerCallbacks(Mono.INativeEventObjectWrapper)

+SC-M: System.Void Mono.Types::AddBuiltinType(System.Type,Mono.ManagedType)
+SC-M: System.Void Mono.Types::CreateNativeTypes()
+SC-M: System.Void Mono.Types::.ctor(System.IntPtr)

+SC-M: Mono.TimeManager Mono.Surface::get_TimeManager()
+SC-M: System.Void Mono.TimeManager::.ctor(System.IntPtr,System.Boolean)

# mark most of Application internals as [SecurityCritical]
+SC-M: System.Void System.Windows.Application::set_Current(System.Windows.Application)
+SC-M: System.Reflection.Assembly System.Windows.Application::GetAssembly(System.String)
+SC-M: System.Void System.Windows.Application::Terminate()
+SC-M: System.Windows.Style System.Windows.Application::GetGenericXamlStyleFor(System.Type)
+SC-M: System.Void System.Windows.Application::convert_keyframe_value_cb(Mono.Kind,System.IntPtr,System.IntPtr,Mono.Value&)
+SC-M: System.Void System.Windows.Application::convert_keyframe_value_cb_safe(Mono.Kind,System.IntPtr,System.IntPtr,Mono.Value&)
+SC-M: Mono.ManagedStreamCallbacks System.Windows.Application::get_resource_cb(System.Uri,System.Uri)
+SC-M: Mono.ManagedStreamCallbacks System.Windows.Application::get_resource_cb_safe(System.IntPtr,System.IntPtr)
+SC-M: System.Void System.Windows.Application::get_implicit_styles_cb(System.Windows.FrameworkElement,Mono.ImplicitStyleMask,System.IntPtr&)
+SC-M: System.Void System.Windows.Application::get_implicit_styles_cb_safe(System.IntPtr,Mono.ImplicitStyleMask,System.IntPtr&)
+SC-M: System.Windows.Resources.StreamResourceInfo System.Windows.Application::GetXapResource(System.String)
+SC-M: System.Boolean System.Windows.Application::Install(System.Boolean)

# mark most of Deployment internals as [SecurityCritical]
+SC-M: System.Boolean System.Windows.Deployment::CreateApplication()
+SC-M: System.Void System.Windows.Deployment::TerminateAndSetCulture(System.String,System.String)
+SC-M: System.Boolean System.Windows.Deployment::InitializeDeployment(System.IntPtr,System.String,System.String,System.String)
+SC-M: System.Boolean System.Windows.Deployment::InitializeDeployment(System.String,System.String)
+SC-M: System.Boolean System.Windows.Deployment::LoadAssemblies()
+SC-M: System.Void System.Windows.Deployment::AssemblyRegister(System.Reflection.Assembly,System.Windows.ManifestAssemblyKind)
+SC-M: System.Void System.Windows.Deployment::AssemblyGetResponse(System.IAsyncResult)
+SC-M: System.Void System.Windows.Deployment::AsyncDownloadComplete()
+SC-M: System.Void System.Windows.Deployment::DownloadAssembly(System.Uri,System.Windows.ManifestAssemblyKind)
+SC-M: System.Void System.Windows.Deployment::ExtractXap(System.String)
+SC-M: System.Reflection.Assembly System.Windows.Deployment::Load(System.Byte[],System.Windows.ManifestAssemblyKind)
+SC-M: System.Void System.Windows.Deployment::ReadManifest()
+SC-M: System.Void System.Windows.Deployment::set_Current(System.Windows.Deployment)
+SC-M: System.Void System.Windows.Deployment::TerminateCurrentApplication()
+SC-M: Mono.Types System.Windows.Deployment::get_Types()

+SC-M: System.Void System.Windows.DependencyProperty::UnmanagedPropertyChangedCallback(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
+SC-M: System.Void System.Windows.DependencyProperty::AddPropertyChangeCallback(System.Windows.PropertyChangedCallback)
+SC-M: System.Void System.Windows.DependencyProperty::CustomUnmanagedPropertyChangedCallbackSafe(System.IntPtr,System.IntPtr,Mono.MoonError&,System.IntPtr)
+SC-M: System.Void System.Windows.DependencyProperty::UnmanagedPropertyChangedCallbackSafe(System.IntPtr,System.IntPtr,Mono.MoonError&,System.IntPtr)

+SC-M: System.Void System.Windows.DependencyObject::set_native(System.IntPtr)
+SC-M: System.Void System.Windows.DependencyObject::AddPropertyChangedHandler(System.Windows.DependencyProperty,Mono.UnmanagedPropertyChangeHandler)
+SC-M: System.Void System.Windows.DependencyObject::RemovePropertyChangedHandler(System.Windows.DependencyProperty,Mono.UnmanagedPropertyChangeHandler)

+SC-M: System.Boolean System.Windows.Controls.ContentControl::get_ContentSetsParent()
+SC-M: System.Void System.Windows.Controls.ContentControl::set_ContentSetsParent(System.Boolean)

+SC-M: System.Void System.Windows.Controls.ItemsControl::SetLogicalParent(System.IntPtr,System.Collections.IList)
+SC-M: System.Void System.Windows.Controls.ItemsControl::SetItemsPresenter(System.Windows.Controls.ItemsPresenter)
+SC-M: System.Void System.Windows.Controls.ItemsControl::InvokeItemsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)

+SC-M: System.Void System.Windows.Media.Imaging.WriteableBitmap::PinAndSetBitmapData()

+SC-M: System.Windows.Media.MediaStreamSource System.Windows.Media.MediaStreamSource::FromIntPtr(System.IntPtr)
+SC-M: System.Void System.Windows.Media.MediaStreamSource::CloseMediaInternal()
+SC-M: System.Void System.Windows.Media.MediaStreamSource::CloseMediaInternal(System.IntPtr)
+SC-M: System.Void System.Windows.Media.MediaStreamSource::GetDiagnosticAsyncInternal(System.IntPtr,System.Windows.Media.MediaStreamSourceDiagnosticKind)
+SC-M: System.Void System.Windows.Media.MediaStreamSource::GetSampleAsyncInternal(System.IntPtr,System.Windows.Media.MediaStreamType)
+SC-M: System.Void System.Windows.Media.MediaStreamSource::OpenMediaAsyncInternal(System.IntPtr,System.IntPtr)
+SC-M: System.Void System.Windows.Media.MediaStreamSource::SeekAsyncInternal(System.IntPtr,System.Int64)
+SC-M: System.Void System.Windows.Media.MediaStreamSource::SetMediaElement(System.Windows.Controls.MediaElement)
+SC-M: System.Void System.Windows.Media.MediaStreamSource::SwitchMediaStreamAsyncInternal(System.IntPtr,System.Windows.Media.MediaStreamDescription)

+SC-M: System.Boolean System.Windows.Media.MultiScaleTileSource::GetImageUri(System.Int32,System.Int32,System.Int32,System.IntPtr&)

+SC-M: System.Object System.Windows.Data.BindingExpressionBase::ConvertToType(System.Windows.DependencyProperty,System.Object)
+SC-M: System.Object System.Windows.Data.BindingExpressionBase::ConvertFromSourceToTarget(System.Object)
+SC-M: System.Object System.Windows.Data.BindingExpressionBase::ConvertFromTargetToSource(System.Object)

+SC-M: System.Void System.Windows.Style::ConvertSetterValue(System.Windows.Setter)
+SC-M: System.Void System.Windows.Style::ConvertSetterValues()

+SC-M: System.Void System.Windows.FrameworkTemplate::SetXamlBuffer(Mono.Xaml.ParseTemplateFunc,Mono.Xaml.XamlContext)

+SC-M: System.Void Mono.IListenPropertyChanged::OnPropertyChanged(System.IntPtr,System.IntPtr,Mono.MoonError&,System.IntPtr)

+SC-M: System.Void Mono.INativeEventObjectWrapper::set_NativeHandle(System.IntPtr)

# clipboard
+SC-M: System.IntPtr System.Windows.Clipboard::GetClipboard()
+SC-M: System.Void System.Windows.Clipboard::CheckUserInitiated()

# Elevated Trust related overrides
+SSC-M: System.IO.Stream System.Windows.Controls.SaveFileDialog::OpenFile()

# need this for heap visualization in moon-unit (when enabled)
+SC-T: Mono.HeapUtil

# parser helpers (until they are re-writtern in managed code)
+SC-M: System.Windows.Point System.Windows.Point::FromString(System.String)
+SC-M: System.Windows.Rect System.Windows.Rect::FromString(System.String)

# analytics
+SC-M: System.Void Mono.AnalyticsLinux::SampleProcess()
+SC-M: System.Void Mono.AnalyticsLinux::SampleCpu()
