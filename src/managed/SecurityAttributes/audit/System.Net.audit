!SSC-F40DE13406B894A501FDA4BF0D09AC3D
System.Boolean System.Net.NetworkInformation.NetworkInterface::GetIsNetworkAvailable()
	20110208	spouliot - a7e40bc - pinvoke renamed (now prefixed with _moonlight_cbinding_*)
	r156737		spouliot - pinvoke into NetworkChange.runtime_get_network_service and NetworkChange.moon_network_service_get_is_network_available (libmoon)

!SSC-F900CA2058EED6F0EC30C07543DA8D15
System.Boolean System.Net.Sockets.Socket::ConnectAsyncReal(System.Net.Sockets.SocketAsyncEventArgs)
	20110429	spouliot - e2f43dd7 - if the policy fails then call socket_pool_queue (icall) with Worker.Dispatcher and 'result' (SocketAsyncResult) so the Connect event is fired

!SSC-A220A097363AC1B57D54F7195F45F06D
System.Boolean System.Net.Sockets.Socket::ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
	20110321	spouliot - 36d63134 / 1a264619 / cc3d2b03 - avoid Worker creation and minimize delegate allocations
	20101108	spouliot - no source change / compiler (lock related) change?
	20101004	spouliot - 430b2940 - call socket_pool_queue [SecurityCritical] on Socket/Worker.Receive [SecurityCritical] using a SocketAsyncResult built with a byte[] buffer ot a (ArraySegment) BufferList

!SSC-BE7EEB3EC42A26C84E9C793DA9994A2E
System.Boolean System.Net.Sockets.Socket::SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
	20110321	spouliot - 36d63134 / 1a264619 / cc3d2b03 - avoid Worker creation and minimize delegate allocations
	20101108	spouliot - no source change / compiler (lock related) change?
	20101004	spouliot - 430b2940 - call socket_pool_queue [SecurityCritical] on Socket/Worker.Send [SecurityCritical] using a SocketAsyncResult built with a byte[] buffer ot a (ArraySegment) BufferList

!SSC-CD0FC267FBF6D7E524783028C0F7DE80
System.IAsyncResult System.Net.Sockets.Socket::BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)
	20110429	spouliot - call Connect_internal (icall) and if the connection cannot be synchronous calls socket_pool_queue (icall) with Worker.Dispatcher and 'req' (SocketAsyncResult)

!SSC-EC6FF98D85748B926E04257E3A474606
System.Int32 System.Net.Sockets.Socket::Receive(System.Collections.Generic.IList`1<System.ArraySegment`1<System.Byte>>,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError&)
	20110411	spouliot - validate buffers, pin their memory locations, calls Receive_internal (icall) convert its return value, on error, into a SocketException

!SSC-35110336CAC64E90A4BBF40B94D4E80B
System.Int32 System.Net.Sockets.Socket::Send(System.Collections.Generic.IList`1<System.ArraySegment`1<System.Byte>>,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError&)
	20110411	spouliot - validate buffers, pin their memory locations, calls Send_internal (icall) convert its return value, on error, into a SocketException

!SSC-4675134D0FE0CC4145F066994356C9AF
System.Net.EndPoint System.Net.Sockets.Socket::get_RemoteEndPoint()
	20101203	spouliot - ba9d007 - the 'address_family' field is now passed to the call to the RemoteEndPoint_internal icall
	r142142		spouliot - calls into RemoteEndPoint_internal (icall) to retrieve a SocketAddress

!SSC-479023F6B97566841F4FF0020FC0A847
System.Net.IPAddress[] System.Net.Dns::GetHostAddresses(System.String)
	20110411	spouliot - validate argument then call GetHostByName_internal (icall) and throw a SocketException on error

!SSC-C2CBA7627371E1DD1902947C97C2D89F
System.Object System.Net.Sockets.Socket::GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)
	20110411	spouliot - check is instance is closed or disposed then call GetSocketOption_obj_internal (icall). Convert its error (if any) into a SocketException or cast the data into the proper type before returning it

!SSC-09165E5417642F46D731F1474161E4A1
System.Void System.Net.NetworkInformation.NetworkChange::.cctor()
	20110208	spouliot - a7e40bc - pinvoke renamed (now prefixed with _moonlight_cbinding_*)
	20101004	spouliot - 987ee7ee - pinvoke into moon_network_service_set_network_state_changed_callback using (pinvoked) runtime_get_network_service. note: changed (override) from SC to SSC since a [SecurityCritical] cctor behavior is not defined (who's the caller?)

!SSC-E43FDEB57BE8D9FE9B68B0FD1FFE0FE6
System.Void System.Net.Policy.BaseDomainPolicy::.cctor()
	r153396		spouliot - call AppDomain.GetData [SecurityCritical] to retrive the XAP URI

!SSC-33F238A6533FDD73BD5EC77EF91FAC1A
System.Void System.Net.Sockets.Socket/SocketAsyncResult::Complete()
	20110321	spouliot - 36d63134 - if not disposed use Worker.Dispatcher for 'sac' (SocketAsyncCall) instead of calling GetDelegate
	20101108	spouliot - no source change / compiler (lock related) change?
	20101019	spouliot - aad016f - warning cleanup (an always null variable, req, was removed)
	20101013	spouliot - 936c28a - only call queue.Dequeue if queue.Count > 0
	20101004	spouliot - 430b2940 - call socket_pool_queue [SecurityCritical] on non-null 'sac' which represents the queued delegate returned by Socket/SocketAsyncResult::GetDelegate [SecurityCritical]

!SSC-1CA1DEF92148258BDF457B8C9C529EA1
System.Void System.Net.Sockets.Socket/Worker::Send()
	20110411	spouliot - cc3d2b03 - if there's no error (==0) and some data available (Size >0) then call socket_pool_queue (icall) using 'Worker.Dispatcher' and 'result'

!SSC-056907E31ADB86183CA8E2309741AB83
System.Void System.Net.Sockets.Socket::.ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
	20110217	spouliot - 3dbfe75 - parameter names updated to match FX/SL4
	r142142		spouliot - calls Socket_internal (icall)

!SSC-61B91162D5ADD8FCBEFD74D940D430CF
System.Void System.Net.Sockets.Socket::CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
	r142142		spouliot - calls Thread.Abort on the socket blocking_thread

!SSC-E5FBCF079D93072593B503BB0057B6E1
System.Void System.Net.Sockets.Socket::Dispose(System.Boolean)
	r142142		spouliot - calls into Close_internal (icall) and calls Thread.Abort on the socket blocking_thread

!SSC-1D435C6B20073FB4172363194114B81D
System.Void System.Net.Sockets.Socket::set_Blocking(System.Boolean)
	20110429	spouliot - calls Blocking_internal (icall). Can be used before/after calling Connect_internal (so it's not tuned out anymore)

!SSC-A469AE7A36476C3AF7A6A79E045ED9FB
System.Void System.Net.Sockets.Socket::SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
	20110411	spouliot - check is instance is closed or disposed then call SetSocketOption_internal (icall) then convert its error (if any) into a SocketException

!SSC-2270C5E24E80610537B2327C86A4D0CC
System.Void System.Net.Sockets.Socket::Shutdown(System.Net.Sockets.SocketShutdown)
	r142142		spouliot - calls Shutdown_internal (icall)

!SSC-59455E83C25494CA468EC35CE4EF26C3
System.Void System.Net.Sockets.SocketException::.ctor()
	r142142		spouliot - use internal call WSAGetLastError_internal to get the error code (as documented)

!SSC-81526640CFABC09524C40178AE707950
System.Void System.Net.WebClient::.ctor()
	r142142		spouliot - get "xap_uri" by calling (critical) AppDomain.GetData

!SSC-806749486F52B0B1F41390C75D608635
System.Void System.Net.WebRequest::.cctor()
	r155874		spouliot - Activator.CreateInstance is useb to create both IWebCreator instances for the browser and client http stack (from System.Windows.dll)

